<Window x:Class="BookingApp.WPF.View.Tourist.TouristMainPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BookingApp.WPF.View.Tourist"
        xmlns:ns="clr-namespace:BookingApp.Localization"
        mc:Ignorable="d"
        Title="TouristMainPage" Height="720" Width="1280" WindowStartupLocation="CenterScreen">
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
    </Window.Background>

    <Window.Resources>
        <Style TargetType="Frame" x:Key="NoNavigationFrameStyle">
            <Setter Property="NavigationUIVisibility" Value="Hidden" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="280"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="280"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <StackPanel Orientation="Vertical" Background="{DynamicResource BackgroundBrush1}" Margin="0,0,950,0">
            <Grid Height="575" Width="300">
                <Image Source="{DynamicResource ThemeImage}" Width="65" Height="65" Margin="0,0,215,480" MouseDown="Theme_Click"/>
                <Image Source="{DynamicResource LanguageImage}" Width="55" Height="55" Margin="0,0,70,480" MouseDown="Language_Click"/>
                <Image Source="{DynamicResource NotifImage}" Width="58" Height="58" Margin="70,0,0,480" MouseDown="Notification_Click"/>
                <Image Source="{DynamicResource UserImage}" Width="60" Height="60" Margin="215,0,0,480" MouseDown="Profile_Click"/>
                <Button Content="{ns:Loc HomePage}" Click="TourDisplay_Click" Margin="0,0,0,320" HorizontalAlignment="Center"/>
                <Button Content="{ns:Loc MyReservations}" Click="Tours_Click" Margin="0,0,0,180" HorizontalAlignment="Center"/>
                <ToggleButton Content="{ns:Loc TourRequest}" Margin="0,0,0,40" HorizontalAlignment="Center" Checked="ToggleButton_Checked">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Path x:Name="Arrow" Data="M 0 0 L 8 8 L 16 0 Z" Fill="White" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                                <Popup Name="Popup" PlacementTarget="{Binding ElementName=toggleButton}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=toggleButton}">
                                    <Border BorderThickness="0" BorderBrush="Gray" Background="Gray">
                                        <StackPanel>
                                            <Button Content="{ns:Loc TourRequest}" Click="TourRequest_Click" Margin="0"/>
                                            <Button Content="{ns:Loc MyTourRequests}" Click="TourRequestDisplay_Click" Margin="0"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <ToggleButton Content="{ns:Loc ComplexTourRequest}" Margin="0,100,0,0" FontSize="22" HorizontalAlignment="Center" Checked="ToggleButton_Checked">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Path x:Name="Arrow" Data="M 0 0 L 8 8 L 16 0 Z" Fill="White" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                                <Popup Name="Popup" PlacementTarget="{Binding ElementName=toggleButton}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=toggleButton}">
                                    <Border BorderThickness="0" BorderBrush="Gray" Background="Gray">
                                        <StackPanel>
                                            <Button Content="{ns:Loc ComplexTourRequest}" Click="ComplexRequest_Click" Margin="0"/>
                                            <Button Content="{ns:Loc MyComplexTourRequests}" Click="ComplexTourRequestDisplay_Click" FontSize="22" Margin="0"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <ToggleButton Content="{ns:Loc DriveReservation}" Margin="0,240,0,0" HorizontalAlignment="Center" Checked="ToggleButton_Checked">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <Path x:Name="Arrow" Data="M 0 0 L 8 8 L 16 0 Z" Fill="White" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                                <Popup Name="Popup" PlacementTarget="{Binding ElementName=toggleButton}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=toggleButton}">
                                    <Border BorderThickness="0" BorderBrush="Gray" Background="Gray">
                                        <StackPanel>
                                            <Button Content="{ns:Loc DriveReservation}" Click="DriveReservation_Click" Margin="0"/>
                                            <Button Content="{ns:Loc FastDriveReservation}" Click="FastDrive_Click" Margin="0"/>
                                            <Button Content="{ns:Loc GroupDriveReservation}" Click="GroupDrive_Click" Margin="0"/>
                                            <Button Content="{ns:Loc MyDrives}" Click="DriveDisplay_Click" Margin="0"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <Button Content="{ns:Loc Vouchers}" Click="Vouchers_Click" Margin="0,380,0,0" HorizontalAlignment="Center"/>
            </Grid>
            <Grid Height="140" Width="280">
                <Button Content="{ns:Loc LogOut}" Click="BackToSignIn" Margin="0,0,0,50" HorizontalAlignment="Center"/>
            </Grid>
        </StackPanel>

        <Grid Margin="330,0,0,0">
            <Frame Style="{StaticResource NoNavigationFrameStyle}" x:Name="FrameHomePage" Height="Auto"/>
        </Grid>
    </Grid>
</Window>
